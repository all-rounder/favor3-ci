name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm@latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile # npm ci
        # Cache node_modules and pnpm store
        env:
          PNPM_HOME: ~/.pnpm

      - name: Lint
        run: pnpm lint || true # npm run lint || true

      - name: Type check
        run: pnpm exec tsc --noEmit || true # npx tsc --noEmit || true

      - name: Run tests
        run: pnpm exec jest --coverage --passWithNoTests # npx jest --coverage --passWithNoTests

      - name: Upload Jest coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Audit dependencies
        run: pnpm audit --audit-level=high || true # npm audit --audit-level=high || true

      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@v2
      #   with:
      #     projectBaseDir: .
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.FAVOR3_TOKEN }}

      - name: Build and push Docker image
        id: build
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/app
          TAG=${{ github.sha }}
          docker build -t $IMAGE:$TAG .
          docker push $IMAGE:$TAG
          echo "image=$IMAGE:$TAG" >> $GITHUB_OUTPUT

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ steps.build.outputs.image }}
          severity: CRITICAL,HIGH
          ignore-unfixed: true

      - name: Checkout CD repo
        uses: actions/checkout@v4
        with:
          repository: all-rounder/favor3-cd
          token: ${{ secrets.FAVOR3_TOKEN }}

      - name: Update kustomization for dev
        run: |
          IMAGE=${{ steps.build.outputs.image }}
          cd overlays/dev
          kustomize edit set image app=$IMAGE

      - name: Commit and push
        run: |
          git config user.name "ci-bot"
          git config user.email "ci-bot@users.noreply.github.com"
          git add overlays/dev/kustomization.yaml
          git commit -m "Update dev image to $IMAGE"
          git push
